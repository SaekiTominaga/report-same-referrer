var e,t,r=this&&this.__classPrivateFieldSet||function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},o=this&&this.__classPrivateFieldGet||function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};export default class{constructor(o,n={}){e.set(this,void 0),t.set(this,void 0),r(this,e,o),void 0===n.fetchParam&&(n.fetchParam={location:"location",referrer:"referrer"}),void 0===n.condition&&(n.condition="origin"),r(this,t,n)}init(){const e=document.referrer;if(""===e)return;if(!this._checkUserAgent())return;const r=new URL(e);switch(o(this,t).condition){case"origin":if(r.origin!==location.origin)return;break;case"host":if(r.host!==location.host)return;break;case"hostname":if(r.hostname!==location.hostname)return;break;default:throw new Error("An invalid value was specified for the argument `condition`.")}this._report(r)}_checkUserAgent(){const e=navigator.userAgent,r=o(this,t).denyUAs;if(void 0!==r&&r.some((t=>t.test(e))))return console.info("No referrer error report will be sent because the user agent match the deny list."),!1;const n=o(this,t).allowUAs;return!(void 0!==n&&!n.some((t=>t.test(e))))||(console.info("No referrer error report will be sent because the user agent does not match the allow list."),!1)}async _report(r){const n=o(this,t).fetchParam,i=new FormData;i.append(n.location,location.toString()),i.append(n.referrer,r.toString());const s=await fetch(o(this,e),{method:"POST",headers:o(this,t).fetchHeaders,body:new URLSearchParams([...i])});if(!s.ok)throw new Error(`"${s.url}" is ${s.status} ${s.statusText}`)}}e=new WeakMap,t=new WeakMap;
//# sourceMappingURL=ReportSameReferrer.min.js.map